name: Uptime checks

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch:

env:
  # Bump this if you ever want to invalidate all past caches
  UPTIME_STATE_VERSION: v2

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install requests

      # Restore the most recent state (latest key that matches the prefix)
      - name: Restore uptime state
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .uptime_state
          key: uptime-state-${{ env.UPTIME_STATE_VERSION }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            uptime-state-${{ env.UPTIME_STATE_VERSION }}-${{ github.ref }}-
            uptime-state-${{ env.UPTIME_STATE_VERSION }}-

      - name: Run monitor
        env:
          # Monitor one or more URLs (comma-separated)
          URLS: "https://ajendless.com.my/?uptime=1, http://akyu.com.my/?uptime=1, http://caam.gov.my/?uptime=1, https://crystalwrap.my/?uptime=1, https://felcra.com.my/?uptime=1, http://iconcept.com.my/?uptime=1, https://iconceptdigital.com/uptime-check.txt, https://perakturfclub.my/?uptime=1, https://selangoraviationshow.com/?uptime=1, https://selangorsummit.com/uptime-check/?uptime=1, https://semy.com.my/?uptime=1, https://www.beaandbow.com/?uptime=1, https://www.fgvholdings.com/?uptime=1, https://www.insken.gov.my/uptime-check/?uptime=1, https://www.insken.gov.my/uptime-check/?uptime=1, https://www.selangorturfclub.com/?uptime=1, https://www.sgm.org.my/?uptime=1, http://investselangor.my/uptime-check/?uptime=1"
          TIMEOUT: "15"
          EXPECT: ""   # optional regex; leave empty to skip content check

          # CallMeBot WhatsApp (add these in repo Settings → Secrets and variables → Actions)
          CALLMEBOT_PHONE: ${{ secrets.CALLMEBOT_PHONE }}
          CALLMEBOT_APIKEY: ${{ secrets.CALLMEBOT_APIKEY }}

          # Stateful settings
          STATE_FILE: ".uptime_state/state.json"
          STATE_SCHEMA_VERSION: ${{ env.UPTIME_STATE_VERSION }}

          # Behavior you asked for
          FAILURE_THRESHOLD: "2"   # alert on FIRST failure
          REMIND_MIN: "10"         # remind every 10 minutes while still down
        run: python monitor.py

      # Save updated state for the next run (even if the run failed)
      - name: Save uptime state
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .uptime_state
          key: uptime-state-${{ env.UPTIME_STATE_VERSION }}-${{ github.ref }}-${{ github.run_id }}
